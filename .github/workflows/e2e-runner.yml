name: E2E Tests
on:
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      test_scope: ${{ steps.scope.outputs.test_scope }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changes
        id: changes
        run: |
          echo "🔄  Analyzing changes in PR..."
          
          changed_apps=$(git diff --name-only origin/main HEAD | grep -E "/apps/[^/]+/" || true)
          changed_test_files=$(git diff --name-only origin/main HEAD | grep -E "^tests/e2e/" || true)
          
          echo "📦 Files changed:"
          [ -z "$changed_apps" ] && echo "  No changes in files" || echo "$changed_apps" | sed 's/^/  /'
          
          echo "🧪 E2E tests:"
          [ -z "$changed_test_files" ] && echo "  No changes in e2e tests" || echo "$changed_test_files" | sed 's/^/  /'
          
          echo "✨ Affected services:"
          full_paths=$(echo "$changed_apps" | sed -E 's#^(.*/apps/[^/]+)/.*#\1#' | sort -u | paste -sd "|" -)
          [ -z "$full_paths" ] && echo "  No changes in services" || echo "$full_paths" | tr '|' '\n' | sed 's/^/  /'
          
          test_paths=$(echo "$full_paths" | tr '|' '\n' | sed -E 's#.*(apps/[^/]+)#\1#' | paste -sd "|" -)
          test_files=$(echo "$changed_test_files" | paste -sd "|" -)
          
          echo "test_paths=${test_paths}" >> $GITHUB_OUTPUT
          echo "changed_test=${test_files}" >> $GITHUB_OUTPUT

      - name: Check shared modules and modified e2e tests
        id: shared
        run: |
          test_paths="${{ steps.changes.outputs.test_paths }}"
          changed_test="${{ steps.changes.outputs.changed_test }}"
          
          echo "🔄 Checking shared modules and e2e tests:"
          
          has_shared=$(echo "$test_paths" | tr '|' '\n' | grep -q "shared" && echo "true" || echo "false")
          has_e2e_changes=$([ ! -z "$changed_test" ] && echo "true" || echo "false")
          
          $has_shared && echo "⚠️ Changes in shared modules detected" && echo "$test_paths" | tr '|' '\n' | grep "shared" | sed 's/^/  /'
          $has_e2e_changes && echo "⚠️ Changes in e2e tests detected" && echo "$changed_test" | tr '|' '\n' | sed 's/^/  /'
          
          { $has_shared || $has_e2e_changes; } && test_paths="" || echo "✅ No changes in shared modules or e2e tests"
          
          echo "test_paths=$test_paths" >> $GITHUB_OUTPUT

      - name: Set final scope
        id: scope
        run: |
          test_paths="${{ steps.shared.outputs.test_paths }}"
          echo "🔄 Result:"
          [ -z "$test_paths" ] && echo " ✅ All tests will be run" || {
            echo " ✅ Running tests for:"
            echo "$test_paths" | tr '|' '\n' | sed 's/^/    /'
          }
          echo "test_scope=$test_paths" >> $GITHUB_OUTPUT

  selective-tests:
    needs: detect-changes
    if: needs.detect-changes.outputs.test_scope != ''
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/preconditions/e2e
      - name: Run selective tests
        run: npx playwright test --grep "${{ needs.detect-changes.outputs.test_scope }}" || true 

  all-tests:
    needs: detect-changes
    if: needs.detect-changes.outputs.test_scope == ''
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/preconditions/e2e
      - name: Run all tests
        run: npx playwright test